# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Test
    runs-on:
      ubuntu-latest
      # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16.0-alpine3.18
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: "0163626774"
          POSTGRES_DB: simple_bank
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v3

      - name: Install golang-migrateup
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate

      - name: Run migrations
        run: migrate -path db/migration -database "postgresql://root:0163626774@localhost:5432/simple_bank?sslmode=disable" -verbose up

      - name: Test
        run: make test
